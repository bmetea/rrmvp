/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface CompetitionEntries {
  competition_id: string;
  created_at: Generated<Timestamp | null>;
  id: Generated<string>;
  payment_transaction_id: string | null;
  tickets: Generated<number[] | null>;
  updated_at: Generated<Timestamp | null>;
  user_id: string;
  wallet_transaction_id: string | null;
}

export interface CompetitionPrizes {
  available_quantity: number;
  /**
   * Array of winning ticket numbers that have been claimed by users. These numbers are moved from winning_ticket_numbers when a ticket is won.
   */
  claimed_winning_tickets: Generated<number[] | null>;
  competition_id: string | null;
  created_at: Generated<Timestamp | null>;
  id: Generated<string>;
  is_instant_win: Generated<boolean | null>;
  phase: number;
  prize_group: string;
  product_id: string | null;
  total_quantity: number;
  updated_at: Generated<Timestamp | null>;
  winning_ticket_numbers: number[] | null;
  won_quantity: Generated<number>;
}

export interface Competitions {
  created_at: Generated<Timestamp | null>;
  description: string | null;
  end_date: Timestamp;
  id: Generated<string>;
  media_info: Json | null;
  start_date: Timestamp;
  status: string;
  ticket_price: number;
  tickets_sold: Generated<number>;
  title: string;
  total_tickets: number;
  type: string;
  updated_at: Generated<Timestamp | null>;
}

export interface PaymentTransactions {
  amount: Numeric;
  brand: string | null;
  checkout_id: string;
  created_at: Generated<Timestamp | null>;
  currency: string;
  id: Generated<string>;
  payment_id: string | null;
  payment_type: string | null;
  raw_prepare_result: Json | null;
  raw_status_result: Json | null;
  status_code: string | null;
  status_description: string | null;
  updated_at: Generated<Timestamp | null>;
  user_id: string | null;
}

export interface Products {
  created_at: Generated<Timestamp | null>;
  credit_amount: number | null;
  description: string | null;
  id: Generated<string>;
  is_wallet_credit: Generated<boolean>;
  market_value: number;
  media_info: Json | null;
  name: string;
  sub_name: string | null;
  updated_at: Generated<Timestamp | null>;
}

export interface TicketCounters {
  competition_id: string;
  created_at: Generated<Timestamp | null>;
  last_ticket_number: Generated<number>;
  updated_at: Generated<Timestamp | null>;
}

export interface Users {
  clerk_id: string;
  created_at: Generated<Timestamp | null>;
  email: string;
  first_name: string | null;
  id: Generated<string>;
  image_url: string | null;
  last_name: string | null;
  updated_at: Generated<Timestamp | null>;
  username: string | null;
}

export interface Wallets {
  balance: Generated<number>;
  created_at: Generated<Timestamp | null>;
  id: Generated<string>;
  updated_at: Generated<Timestamp | null>;
  user_id: string;
}

export interface WalletTransactions {
  amount: number;
  created_at: Generated<Timestamp | null>;
  description: string | null;
  id: Generated<string>;
  number_of_tickets: Generated<number | null>;
  reference_id: string | null;
  reference_type: string;
  status: string;
  type: string;
  updated_at: Generated<Timestamp | null>;
  wallet_id: string;
}

export interface WinningTickets {
  claimed_at: Timestamp | null;
  claimed_by_user_id: string | null;
  competition_entry_id: string | null;
  competition_id: string;
  created_at: Generated<Timestamp | null>;
  id: Generated<string>;
  prize_id: string;
  status: Generated<string>;
  ticket_number: number;
  updated_at: Generated<Timestamp | null>;
}

export interface DB {
  competition_entries: CompetitionEntries;
  competition_prizes: CompetitionPrizes;
  competitions: Competitions;
  payment_transactions: PaymentTransactions;
  products: Products;
  ticket_counters: TicketCounters;
  users: Users;
  wallet_transactions: WalletTransactions;
  wallets: Wallets;
  winning_tickets: WinningTickets;
}
